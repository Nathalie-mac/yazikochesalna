apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chat-service
  template:
    metadata:
      labels:
        app: chat-service
    spec:
      imagePullSecrets:
        - name: gitlab-regcred
      initContainers:
        - name: wait-for-postgres
          image: postgres:latest
          env:
            - name: PG_HOST
              valueFrom:
                configMapKeyRef:
                  name: chat-service-config
                  key: SPRING_DATASOURCE_HOST
            - name: PG_PORT
              valueFrom:
                configMapKeyRef:
                  name: chat-service-config
                  key: SPRING_DATASOURCE_PORT
            - name: PG_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: chat-service-config
                  key: SPRING_DATASOURCE_DATABASE
            - name: PG_USERNAME
              valueFrom:
                secretKeyRef:
                  name: chat-service-secrets
                  key: SPRING_DATASOURCE_USERNAME
          command: ["sh", "-c", "until pg_isready -h $PG_HOST -p $PG_PORT -U $PG_USERNAME -d postgres; do echo 'waiting for postgres-chat'; sleep 5; done; echo 'postgres-chat is up';"]
      containers:
        - name: chat-service
          image: registry.gitlab.com/liza.antipa/yazikochesalna/chat-service:main
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: chat-service-config
            - secretRef:
                name: chat-service-secrets
            - configMapRef:
                name: general-service-config
            - secretRef:
                name: general-service-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: chat-service
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: chat-service
